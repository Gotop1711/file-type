#!/usr/bin/node
"use strict";var _context,_interopRequireDefault=require("@babel/runtime-corejs3/helpers/interopRequireDefault"),_regenerator=_interopRequireDefault(require("@babel/runtime-corejs3/regenerator")),_asyncToGenerator2=_interopRequireDefault(require("@babel/runtime-corejs3/helpers/asyncToGenerator")),_slice=_interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/slice")),_slicedToArray2=_interopRequireDefault(require("@babel/runtime-corejs3/helpers/slicedToArray")),FileType=require("."),_process$argv$slice=(0,_slice["default"])(_context=process.argv).call(_context,2),_process$argv$slice2=(0,_slicedToArray2["default"])(_process$argv$slice,1),file=_process$argv$slice2[0];file||(console.error("Expected path of the file to examine"),process.exit()),(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function a(){var b;return _regenerator["default"].wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,FileType.fromFile(file);case 2:b=a.sent,b?(console.log("MIME-type: ".concat(b.mime)),console.log("Extension: ".concat(b.ext))):console.log("Could not determine file type");case 4:case"end":return a.stop();}},a)}))();
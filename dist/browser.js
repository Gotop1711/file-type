'use strict';var _interopRequireDefault=require("@babel/runtime-corejs3/helpers/interopRequireDefault"),_regenerator=_interopRequireDefault(require("@babel/runtime-corejs3/regenerator")),_assign=_interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign")),_promise=_interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/promise")),_asyncToGenerator2=_interopRequireDefault(require("@babel/runtime-corejs3/helpers/asyncToGenerator")),_require=require("readable-web-to-node-stream"),ReadableWebToNodeStream=_require.ReadableWebToNodeStream,toBuffer=require("typedarray-to-buffer"),core=require("./core");function fromStream(){return _fromStream.apply(this,arguments)}function _fromStream(){return _fromStream=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function a(b){var c,d;return _regenerator["default"].wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return c=new ReadableWebToNodeStream(b),a.next=3,core.fromStream(c);case 3:return d=a.sent,a.next=6,c.close();case 6:return a.abrupt("return",d);case 7:case"end":return a.stop();}},a)})),_fromStream.apply(this,arguments)}function fromBlob(){return _fromBlob.apply(this,arguments)}/**
Convert Web API File to Node Buffer.
@param {Blob} blob - Web API Blob.
@returns {Promise<Buffer>}
*/function _fromBlob(){return _fromBlob=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function a(b){var c;return _regenerator["default"].wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,convertBlobToBuffer(b);case 2:return c=a.sent,a.abrupt("return",core.fromBuffer(c));case 4:case"end":return a.stop();}},a)})),_fromBlob.apply(this,arguments)}function convertBlobToBuffer(a){return new _promise["default"](function(b,c){var d=new FileReader;d.addEventListener("loadend",function(a){var c=a.target.result;c instanceof ArrayBuffer&&(c=toBuffer(new Uint8Array(a.target.result))),b(c)}),d.addEventListener("error",function(a){c(new Error(a.message))}),d.addEventListener("abort",function(a){c(new Error(a.type))}),d.readAsArrayBuffer(a)})}(0,_assign["default"])(module.exports,core,{fromStream:fromStream,fromBlob:fromBlob});